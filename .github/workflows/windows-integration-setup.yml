name: Setup Integration Tests Windows

on:
  workflow_call:
    inputs:
      environment:
        required: true
        type: string
      environment-name:
        required: true
        type: string
jobs:
  setup-integration-windows:
    name: Setup Integration Tests Windows
    runs-on: ubuntu-latest
    environment: ${{ inputs.environment }}
    steps:
      - name: Download metadata
        uses: actions/download-artifact@v3
        with:
          name: ${{ inputs.environment-name }}

      - name: Checkout
        uses: actions/checkout@v3
        with:
          path: cli

      - name: Install Tools
        run: |
          wget https://github.com/cloudfoundry/bosh-bootloader/releases/download/v8.4.110/bbl-v8.4.110_linux_x86-64 -P /tmp
          mv /tmp/bbl-* /usr/local/bin/bbl
          chmod +x /usr/local/bin/bbl
          bbl --version

          wget https://s3.amazonaws.com/bosh-cli-artifacts/bosh-cli-7.0.1-linux-amd64 --output-document="/usr/local/bin/bosh"
          chmod +x /usr/local/bin/bosh
          bosh --version

          wget https://github.com/cloudfoundry/credhub-cli/releases/download/2.9.4/credhub-linux-2.9.4.tgz -P ~/
          tar xzvf ~/credhub-linux-2.9.4.tgz
          mv credhub /usr/local/bin/credhub
          chmod +x /usr/local/bin/credhub
          credhub --version
          rm ~/credhub-linux-2.9.4.tgz

      - name: Setup Integration Tests
        id: setup-windows-integration-step
        run: |
          ENV=$(cat metadata.json | jq -r '.name')
          DATA_DIR=$PWD/cf-data
          mkdir -p $DATA_DIR
          eval "$(bbl print-env --metadata-file metadata.json)"

          credhub login
          CF_INT_PASSWORD=$(credhub get -n /bosh-$ENV/cf/cf_admin_password | bosh interpolate --path /value -)
          CF_INT_OIDC_PASSWORD=$(credhub get -n /bosh-$ENV/cf/uaa_oidc_admin_password | bosh interpolate --path /value -)

          credhub get --name /bosh-$ENV/cf/router_ca | bosh interpolate - --path /value/certificate > $DATA_DIR/$ENV.router.ca

          echo "Deployed CAPI version:"
          bosh -d cf releases | grep capi

          # output password into a temp file for consumption by Windows
          echo $CF_INT_PASSWORD > $DATA_DIR/cf-password
          echo $CF_INT_OIDC_PASSWORD > $DATA_DIR/uaa-oidc-password

          echo "::set-output name=data::$DATA_DIR"
      - name: 'Upload CF Data'
        uses: actions/upload-artifact@v3
        with:
          name: cf-windows-data
          path: ${{ steps.setup-windows-integration-step.outputs.data }}
